// Author: Ralph Effting
// Github: https://github.com/ralfting/breakpoint

// Here we define the breakpoints which will become the upper border for each media size.
// The function em-calc() calculates the em-value from a px-value.
$small-breakpoint:  em-calc(640)  !default;
$medium-breakpoint: em-calc(768) !default;
$large-breakpoint:  em-calc(1440) !default;
$xlarge-breakpoint: em-calc(1920) !default;
// Base px
$browser-context: 16 !default;

// Here we define the lower and upper bounds for each media size
$small-range:   (0, $small-breakpoint) !default; // 0, 640px
$medium-range:  (sum($small-breakpoint, em-calc(1)), $medium-breakpoint) !default; // 641px, 1024px
$large-range:   (sum($medium-breakpoint, em-calc(1)), $large-breakpoint)  !default; // 1025px, 1440px
$xlarge-range:  (sum($large-breakpoint,  em-calc(1)), $xlarge-breakpoint) !default; // 1441px, 1920px
$xxlarge-range: (sum($xlarge-breakpoint, em-calc(1)), em-calc(99999999)) !default; // 1921px, ...

// Media Queries
$screen: "only screen" !default;

$landscape: "#{$screen} and (orientation: landscape)" !default;
$portrait: "#{$screen} and (orientation: portrait)" !default;

$small-up: $screen !default;
$small-only: "#{$screen} and (max-width: #{upper-bound($small-range)})" !default;

$medium-up: "#{$screen} and (min-width:#{lower-bound($medium-range)})" !default;
$medium-down: "#{$screen} and (max-width:#{upper-bound($medium-range)})" !default;
$medium-only: "#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})" !default;

$large-up: "#{$screen} and (min-width:#{lower-bound($large-range)})" !default;
$large-down: "#{$screen} and (max-width:#{upper-bound($large-range)})" !default;
$large-only: "#{$screen} and (min-width:#{lower-bound($large-range)}) and (max-width:#{upper-bound($large-range)})" !default;

$xlarge-up: "#{$screen} and (min-width:#{lower-bound($xlarge-range)})" !default;
$xlarge-down: "#{$screen} and (max-width:#{upper-bound($xlarge-range)})" !default;
$xlarge-only: "#{$screen} and (min-width:#{lower-bound($xlarge-range)}) and (max-width:#{upper-bound($xlarge-range)})" !default;

$xxlarge-up: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)})" !default;
$xxlarge-down: "#{$screen} and (max-width:#{upper-bound($xxlarge-range)})" !default;
$xxlarge-only: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)}) and (max-width:#{upper-bound($xxlarge-range)})" !default;

// Functions
@function sum($a, $b) {
  @return ($a+$b);
}

@function em-calc($pixels, $context: $browser-context) {
  @return $pixels/$context;
}

@function upper-bound($lower, $upper) {
  @return $upper+em;
}

@function lower-bound($lower, $upper) {
  @return $lower+em;
}

// Breakpoints
// custom media querie between two points
@mixin media-between($start, $end) {
  $between: "#{$screen} and (min-width: #{em-calc($start)+em}) and (max-width: #{em-calc($end)+em})";
  @media #{$between} {
    @content;
  }
}

@mixin small-up {
  @media #{$small-up} { @content; }
}

@mixin small-only {
  @media #{$small-only} { @content; }
}

@mixin medium-up {
  @media #{$medium-up} { @content;}
}

@mixin medium-down {
  @media #{$medium-down} { @content;}
}

@mixin medium-only {
  @media #{$medium-only} { @content; }
}

@mixin large-up {
  @media #{$large-up} { @content; }
}

@mixin large-down {
  @media #{$large-down} { @content; }
}

@mixin large-only {
  @media #{$large-only} { @content; }
}

@mixin xlarge-up {
  @media #{$xlarge-up} {  @content; }
}

@mixin xlarge-down {
  @media #{$xlarge-down} {  @content; }
}

@mixin xlarge-only {
  @media #{$xlarge-only} { @content; }
}

@mixin xxlarge-up {
  @media #{$xxlarge-up} { @content; }
}

@mixin xxlarge-down {
  @media #{$xxlarge-down} { @content; }
}

@mixin xxlarge-only {
  @media #{$xxlarge-only} { @content; }
}



$tablet-min: 768px;
$desktop-min: 992px;
$desktop-large: 1200px;
$tablet-max: ($desktop-min - 1);
$mobile-max: ($tablet-min - 1);
$desktop-max: $desktop-large -1;

$mobile: "only screen and (max-width: #{$mobile-max})";
$tablet: "only screen and (min-width: #{$tablet-min}) and (max-width: #{$tablet-max})";
$desktop: "only screen and (min-width: #{$desktop-min})";
$desktop-xl: "only screen and (min-width: #{$desktop-large})";


@mixin mobile {
  @media #{$mobile} {
    @content;
  }
}

@mixin tablet {
  @media #{$tablet} {
    @content;
  }
}

@mixin desktop {
  @media #{$desktop} {
    @content;
  }
}

@mixin desktop-xl {
  @media #{$desktop-xl} {
    @content;
  }
}


@mixin size($min-width) {
  @media screen and (min-width: #{$min-width}) {
    @content;
  }
}
